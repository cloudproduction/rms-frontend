{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  timeout: 1000\n});\nconsole.log('file fired once a time'); // if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n\nconst axiosLoginInstance = () => {\n  axiosInstance.interceptors.request.use(function (config) {\n    const token = JSON.parse(window.localStorage.getItem('token'));\n    config.headers = { ...config.headers,\n      Authorization: 'Token ' + token.token\n    }; // you can also do other modification in config\n\n    return config;\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  re;\n};\n\nexport default {\n  axiosInstance,\n  axiosLoginInstance\n};","map":{"version":3,"sources":["/home/julfikar/Desktop/rms-project/rms-frontend/rms-frontend/src/intercept.js"],"names":["axios","axiosInstance","create","baseURL","timeout","console","log","axiosLoginInstance","interceptors","request","use","config","token","JSON","parse","window","localStorage","getItem","headers","Authorization","error","Promise","reject","re"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEE,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AACnCC,EAAAA,OAAO,EAAE,2BAD0B;AAEnCC,EAAAA,OAAO,EAAE;AAF0B,CAAb,CAAtB;AAIFC,OAAO,CAACC,GAAR,CAAY,wBAAZ,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7BN,EAAAA,aAAa,CAACO,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AACrD,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAd;AACAN,IAAAA,MAAM,CAACO,OAAP,GAAiB,EAAE,GAAGP,MAAM,CAACO,OAAZ;AAAqBC,MAAAA,aAAa,EAAE,WAASP,KAAK,CAACA;AAAnD,KAAjB,CAFqD,CAGrD;;AACA,WAAOD,MAAP;AACD,GALH,EAKK,UAAUS,KAAV,EAAiB;AAClB,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAPD;AAQFG,EAAAA,EAAE;AACH,CAVD;;AAWA,eAAe;AAAEtB,EAAAA,aAAF;AAAiBM,EAAAA;AAAjB,CAAf","sourcesContent":["import axios from \"axios\";\n\n  const axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  timeout: 1000,\n  });\nconsole.log('file fired once a time');\n\n// if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n\nconst axiosLoginInstance = () => {\n    axiosInstance.interceptors.request.use(function (config) {\n        const token = JSON.parse(window.localStorage.getItem('token'))\n        config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n        // you can also do other modification in config\n        return config;\n      }, function (error) {\n        return Promise.reject(error);\n    }); \n  re    \n}\nexport default { axiosInstance, axiosLoginInstance };"]},"metadata":{},"sourceType":"module"}