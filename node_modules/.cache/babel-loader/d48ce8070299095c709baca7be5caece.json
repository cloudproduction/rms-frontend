{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  timeout: 1000\n});\nconsole.log('file fired once a time');\nconst token = JSON.parse(window.localStorage.getItem('token')); // if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n\nconst axiosLoginInstance = axiosInstance.interceptors.request.use(function (config) {\n  config.headers = { ...config.headers,\n    Authorization: 'Token ' + token.token\n  }; // you can also do other modification in config\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nexport default {\n  axiosInstance,\n  axiosLoginInstance\n};","map":{"version":3,"sources":["/home/julfikar/Desktop/rms-project/rms-frontend/rms-frontend/src/intercept.js"],"names":["axios","axiosInstance","create","baseURL","timeout","console","log","token","JSON","parse","window","localStorage","getItem","axiosLoginInstance","interceptors","request","use","config","headers","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEE,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa;AACnCC,EAAAA,OAAO,EAAE,2BAD0B;AAEnCC,EAAAA,OAAO,EAAE;AAF0B,CAAb,CAAtB;AAIFC,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAd,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,kBAAkB,GAAGZ,aAAa,CAACa,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AAChFA,EAAAA,MAAM,CAACC,OAAP,GAAiB,EAAE,GAAGD,MAAM,CAACC,OAAZ;AAAqBC,IAAAA,aAAa,EAAE,WAASZ,KAAK,CAACA;AAAnD,GAAjB,CADgF,CAEhF;;AACA,SAAOU,MAAP;AACD,CAJwB,EAItB,UAAUG,KAAV,EAAiB;AAClB,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAN0B,CAA3B;AAQA,eAAe;AAAEnB,EAAAA,aAAF;AAAiBY,EAAAA;AAAjB,CAAf","sourcesContent":["import axios from \"axios\";\n\n  const axiosInstance = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  timeout: 1000,\n  });\nconsole.log('file fired once a time');\nconst token = JSON.parse(window.localStorage.getItem('token'))\n// if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n\nconst axiosLoginInstance = axiosInstance.interceptors.request.use(function (config) {\n    config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n    // you can also do other modification in config\n    return config;\n  }, function (error) {\n    return Promise.reject(error);\n}); \n  \nexport default { axiosInstance, axiosLoginInstance };"]},"metadata":{},"sourceType":"module"}