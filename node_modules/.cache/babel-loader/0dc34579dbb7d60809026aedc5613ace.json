{"ast":null,"code":"import axios from \"axios\";\n\nif (token) {}\n\nconsole.log('file fired once a time'); // const token = JSON.parse(window.localStorage.getItem('token'))\n// if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n// axiosInstance.interceptors.request.use(function (config) {\n//     const token = JSON.parse(window.localStorage.getItem('token'))\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n// }); \n// const axiosInstance = () => {   \n// }\n\nexport default axiosInstance;","map":{"version":3,"sources":["/home/julfikar/Desktop/rms-project/rms-frontend/src/intercept.js"],"names":["axios","token","console","log","axiosInstance"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAGC,KAAH,EAAS,CAAE;;AAEXC,OAAO,CAACC,GAAR,CAAY,wBAAZ,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA,eAAeC,aAAf","sourcesContent":["import axios from \"axios\";\n\n\nif(token){}\n\nconsole.log('file fired once a time');\n// const token = JSON.parse(window.localStorage.getItem('token'))\n// if (token) {\n//    axiosInstance.interceptors.request.use(function (config) {\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n//   }); \n// }\n\n// axiosInstance.interceptors.request.use(function (config) {\n//     const token = JSON.parse(window.localStorage.getItem('token'))\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n// }); \n\n// const axiosInstance = () => {   \n\n// }\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}