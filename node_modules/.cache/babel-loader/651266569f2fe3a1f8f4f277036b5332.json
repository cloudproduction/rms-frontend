{"ast":null,"code":"// import axios from \"axios\";\n//   const axiosInstance = axios.create({\n//   baseURL: 'http://localhost:8000/api',\n//   timeout: 1000,\n//   });\n// console.log('file fired once a time');\n// // if (token) {\n// //    axiosInstance.interceptors.request.use(function (config) {\n// //     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n// //     // you can also do other modification in config\n// //     return config;\n// //   }, function (error) {\n// //     return Promise.reject(error);\n// //   }); \n// // }\n// axiosInstance.interceptors.request.use(function (config) {\n//     const token = JSON.parse(window.localStorage.getItem('token'))\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n// }); \n// // const axiosInstance = () => {   \n// // }\n// export default { axiosInstance, axiosLoginInstance };","map":{"version":3,"sources":["/home/julfikar/Desktop/rms-project/rms-frontend/rms-frontend/src/intercept.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["// import axios from \"axios\";\n\n//   const axiosInstance = axios.create({\n//   baseURL: 'http://localhost:8000/api',\n//   timeout: 1000,\n//   });\n// console.log('file fired once a time');\n\n// // if (token) {\n// //    axiosInstance.interceptors.request.use(function (config) {\n// //     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n// //     // you can also do other modification in config\n// //     return config;\n// //   }, function (error) {\n// //     return Promise.reject(error);\n// //   }); \n// // }\n\n// axiosInstance.interceptors.request.use(function (config) {\n//     const token = JSON.parse(window.localStorage.getItem('token'))\n//     config.headers = { ...config.headers, Authorization: 'Token '+token.token };\n//     // you can also do other modification in config\n//     return config;\n//   }, function (error) {\n//     return Promise.reject(error);\n// }); \n\n// // const axiosInstance = () => {   \n      \n// // }\n// export default { axiosInstance, axiosLoginInstance };"]},"metadata":{},"sourceType":"module"}